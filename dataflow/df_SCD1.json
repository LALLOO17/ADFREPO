{
	"name": "df_SCD1",
	"properties": {
		"folder": {
			"name": "DataFlowMix"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_data_SQLSERVER_SCD1_FF_csv",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable_HR_SCD2",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable_HR_SCD2",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "cast1"
				},
				{
					"name": "alterRow1"
				},
				{
					"name": "lookup1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ID as short,",
				"          NAME as string,",
				"          SALARY as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source(output(",
				"          ID as integer,",
				"          NAME as string,",
				"          SALARY as decimal(5,2)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source2",
				"source1 cast(output(",
				"          ID as integer,",
				"          NAME as string,",
				"          SALARY as decimal(10,2)",
				"     ),",
				"     errors: true) ~> cast1",
				"lookup1 alterRow(upsertIf(1==1)) ~> alterRow1",
				"cast1, source2 lookup(cast1@ID == source2@ID,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookup1",
				"alterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          ID as integer,",
				"          NAME as string,",
				"          SALARY as decimal(5,2)",
				"     ),",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:false,",
				"     upsertable:true,",
				"     keys:['ID'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          ID = cast1@ID,",
				"          NAME = source1@NAME,",
				"          SALARY = cast1@SALARY",
				"     )) ~> sink1"
			]
		}
	}
}