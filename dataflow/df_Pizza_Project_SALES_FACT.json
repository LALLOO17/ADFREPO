{
	"name": "df_Pizza_Project_SALES_FACT",
	"properties": {
		"folder": {
			"name": "PizzaProject2024/DimDF"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AzureSqlTableOrderLineDim",
						"type": "DatasetReference"
					},
					"name": "OrderLine"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTableOrder_dim",
						"type": "DatasetReference"
					},
					"name": "Order"
				},
				{
					"dataset": {
						"referenceName": "ds_SqlServer_CustomerDim",
						"type": "DatasetReference"
					},
					"name": "Customer"
				},
				{
					"dataset": {
						"referenceName": "ds_SqlServer_PizzaProject_PAYMENT_REF",
						"type": "DatasetReference"
					},
					"name": "PaymentRef"
				},
				{
					"dataset": {
						"referenceName": "ds_PizzaProject_CHANNEL_REF",
						"type": "DatasetReference"
					},
					"name": "ChannelRef"
				},
				{
					"dataset": {
						"referenceName": "ds_SqlServer_PizzaProject_DELIVERY_TYPE_REF",
						"type": "DatasetReference"
					},
					"name": "DeliveryTypeRef"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTableProduct_Topping_Dim",
						"type": "DatasetReference"
					},
					"name": "ProductToppingDim"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTableHrLocationDim",
						"type": "DatasetReference"
					},
					"name": "LocationDim"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable_HR_PRODUCT_DIM",
						"type": "DatasetReference"
					},
					"name": "ProductDim"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTableHrPromotionDim",
						"type": "DatasetReference"
					},
					"name": "PromotionDim"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTableDateDateDim",
						"type": "DatasetReference"
					},
					"name": "DateDataDim"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTableHrSalesFact",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "join1"
				},
				{
					"name": "join2"
				},
				{
					"name": "join3"
				},
				{
					"name": "join4"
				},
				{
					"name": "join5"
				},
				{
					"name": "join6"
				},
				{
					"name": "join7"
				},
				{
					"name": "join8"
				},
				{
					"name": "join9"
				},
				{
					"name": "join10"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ORDER_LINE_ID as integer,",
				"          UNIT_PRICE as decimal(5,2),",
				"          QUANTITY as integer,",
				"          PROMOTION_AMOUNT as decimal(5,2),",
				"          PROMOTION_ID as integer,",
				"          ORDER_ID as integer,",
				"          PRODUCT_ID as integer,",
				"          PRODUCT_TOPPING_ID as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> OrderLine",
				"source(output(",
				"          ORDER_ID as integer,",
				"          ORDER_DATE as date,",
				"          ORDER_STATUS as string,",
				"          TOTAL_AMOUNT as decimal(5,2),",
				"          TOTAL_TAX as decimal(5,2),",
				"          TIPS as decimal(5,2),",
				"          TOTAL_QUANTITY as integer,",
				"          DELIVERY_ID as integer,",
				"          CHANNEL_ID as integer,",
				"          STORE_LOCATION_ID as integer,",
				"          CUSTOMER_ID as integer,",
				"          PAYMENT_ID as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> Order",
				"source(output(",
				"          CUSTOMER_DIM_KEY as long,",
				"          customer_id as short,",
				"          CUSTOMER_FIRST_NAME as string,",
				"          CUSTOMER_LAST_NAME as string,",
				"          IS_LOYAL as boolean,",
				"          PrimaryEMAIL as string,",
				"          SecondaryEMAIL as string,",
				"          PRIMARY_PHONE_NUMBER as string,",
				"          SECONDARY_PHONE_NUMBER as string,",
				"          Office_ADDRESS_LANE1 as string,",
				"          Office_ADDRESS_LANE_2 as string,",
				"          Office_CITY_NAME as string,",
				"          Office_STATE_NAME as string,",
				"          Office_COUNTRY_NAME as string,",
				"          Office_ZIP_CODE as integer,",
				"          Office_GATE_CODE as short,",
				"          Residential_ADDRESS_LANE1 as string,",
				"          Residential_ADDRESS_LANE_2 as string,",
				"          Residential_CITY_NAME as string,",
				"          Residential_STATE_NAME as string,",
				"          Residential_COUNTRY_NAME as string,",
				"          Residential_ZIP_CODE as integer,",
				"          Residential_GATE_CODE as short,",
				"          JOINING_DATE as string,",
				"          STG_CREATE_USER_ID as string,",
				"          STG_CREATE_USER_DATE as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> Customer",
				"source(output(",
				"          Payment_Ref_Key as long,",
				"          PAYMENT_ID as integer,",
				"          PAYMENT_TYPE as string,",
				"          USER_CREATE_DATE as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> PaymentRef",
				"source(output(",
				"          CHANNEL_REF_KEY as long,",
				"          CHANNEL_ID as short,",
				"          CHANNEL_TYPE as string,",
				"          CREATE_USER_DATE as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> ChannelRef",
				"source(output(",
				"          DELIVERY_TYPE_REF_KEY as long,",
				"          DELIVERY_ID as integer,",
				"          DELIVERY_TYPE as string,",
				"          CREATE_USER_DATE as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> DeliveryTypeRef",
				"source(output(",
				"          Product_Topping_Dim_Key as long,",
				"          PRODUCT_TOPPING_ID as integer,",
				"          TOPPING_NAME as string,",
				"          TOPING_PRICE as decimal(10,2),",
				"          IS_ACTIVE as boolean,",
				"          EFFECTIVE_DATE as date,",
				"          END_DATE as date,",
				"          FLAG as string,",
				"          USER_CREATE_DATE as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> ProductToppingDim",
				"source(output(",
				"          Location_Dim_Key as integer,",
				"          STORE_LOCATION_ID as integer,",
				"          STORE_NAME as string,",
				"          STORE_ADDRESS as string,",
				"          STORE_PHONE_NUMBER as string,",
				"          STATE_COUNTRY as string,",
				"          STORE_OPEN_TIME as string,",
				"          STORE_CLOSE_TIME as string,",
				"          STATE_NAME as string,",
				"          CREATE_USER_DATE as date,",
				"          FLAG as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> LocationDim",
				"source(output(",
				"          SURR_PRODUCT_KEY as integer,",
				"          PRODUCT_ID as integer,",
				"          PRODUCT_NAME as string,",
				"          PRODUCT_PRICE as decimal(5,2),",
				"          IS_ACTIVE as string,",
				"          PRODUCT_CATEGORY_ID as integer,",
				"          PRODUCT_CATEGORY_NAME as string,",
				"          PRODUCT_SUBCATEGORY_ID as integer,",
				"          PRODUCT_SUBCATEGORY_NAME as string,",
				"          PRODUCT_SIZE as string,",
				"          PRODUCT_DESCRIPTION as string,",
				"          EFF_START_DATE as date,",
				"          EFF_END_DATE as date,",
				"          FLAG as integer,",
				"          CREATE_USER_DATE as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> ProductDim",
				"source(output(",
				"          PROMOTION_DIM_KEY as integer,",
				"          PROMOTION_ID as integer,",
				"          PROMOTION_NAME as string,",
				"          PREVIOUS_PROMOTION_NAME as string,",
				"          PROMOTION_TYPE as string,",
				"          PREVIOUS_PROMOTION_TYPE as string,",
				"          DISCOUNT_AMOUNT as string,",
				"          PREVIOUS_DISCOUNT_AMOUNT as string,",
				"          START_DATE as date,",
				"          PREVIOUS_START_DATE as date,",
				"          END_DATE as date,",
				"          PREVIOUS_END_DATE as date,",
				"          CREATE_USER_DATE as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> PromotionDim",
				"source(output(",
				"          Date_Key as integer,",
				"          day_yyyy_mm_dd as date,",
				"          day_us_mm_dd_yyyy as date,",
				"          day_us_long as string,",
				"          day_us_m_d_yy as date,",
				"          week_short as string,",
				"          week_number as integer,",
				"          week_long as string,",
				"          month_in_quarter_number as string,",
				"          month_in_year_short as string,",
				"          month_in_year_long as string,",
				"          week_wk_qtr_year as string,",
				"          week_from_to as string,",
				"          week_starting as string,",
				"          week_wk_year_cont as string,",
				"          week_wk_year as string,",
				"          week_wk_qtr_year_cont as string,",
				"          day_in_week_short as string,",
				"          day_in_week_number as integer,",
				"          day_in_week_long as string,",
				"          month_short as string,",
				"          month_number as string,",
				"          month_long as string,",
				"          quarter_short_us as string,",
				"          year as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> DateDataDim",
				"OrderLine, Order join(OrderLine@ORDER_ID == Order@ORDER_ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1, Customer join(Order@CUSTOMER_ID == Customer@customer_id,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join2",
				"join2, PaymentRef join(Order@PAYMENT_ID == PaymentRef@PAYMENT_ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join3",
				"join3, ChannelRef join(Order@CHANNEL_ID == ChannelRef@CHANNEL_ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join4",
				"join4, DeliveryTypeRef join(Order@DELIVERY_ID == DeliveryTypeRef@DELIVERY_ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join5",
				"join5, ProductToppingDim join(OrderLine@PRODUCT_TOPPING_ID == ProductToppingDim@PRODUCT_TOPPING_ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join6",
				"join6, LocationDim join(Order@STORE_LOCATION_ID == LocationDim@STORE_LOCATION_ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join7",
				"join7, ProductDim join(OrderLine@PRODUCT_ID == ProductDim@PRODUCT_ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join8",
				"join8, PromotionDim join(OrderLine@PROMOTION_ID == PromotionDim@PROMOTION_ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join9",
				"join9, DateDataDim join(ORDER_DATE == day_yyyy_mm_dd,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join10",
				"join10 select(mapColumn(",
				"          ORDER_LINE_ID,",
				"          ORDER_ID = Order@ORDER_ID,",
				"          CUSTOMER_DIM_KEY,",
				"          Payment_Ref_Key,",
				"          CHANNEL_REF_KEY,",
				"          DELIVERY_TYPE_REF_KEY,",
				"          Location_Dim_Key,",
				"          PRODUCT_KEY = SURR_PRODUCT_KEY,",
				"          PROMOTION_DIM_KEY,",
				"          Product_Topping_Dim_Key,",
				"          Date_Key,",
				"          ORDER_DATE,",
				"          ORDER_STATUS,",
				"          QUANTITY,",
				"          UNIT_PRICE,",
				"          TOPING_PRICE,",
				"          PROMOTION_AMOUNT",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          order_line_id as integer,",
				"          order_id as integer,",
				"          customer_dim_key as long,",
				"          payment_ref_key as long,",
				"          channel_ref_key as long,",
				"          delivery_type_ref_key as long,",
				"          product_topping_dim_key as long,",
				"          location_dim_key as integer,",
				"          SURR_PRODUCT_KEY as integer,",
				"          promotion_dim_key as integer,",
				"          date_key as integer,",
				"          order_date as date,",
				"          order_status as string,",
				"          quantity as integer,",
				"          unit_price as decimal(5,2),",
				"          toping_price as decimal(10,2),",
				"          promotion_amount as decimal(5,2)",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          order_line_id = ORDER_LINE_ID,",
				"          order_id = ORDER_ID,",
				"          customer_dim_key = CUSTOMER_DIM_KEY,",
				"          payment_ref_key = Payment_Ref_Key,",
				"          channel_ref_key = CHANNEL_REF_KEY,",
				"          delivery_type_ref_key = DELIVERY_TYPE_REF_KEY,",
				"          product_topping_dim_key = Product_Topping_Dim_Key,",
				"          location_dim_key = Location_Dim_Key,",
				"          SURR_PRODUCT_KEY = PRODUCT_KEY,",
				"          promotion_dim_key = PROMOTION_DIM_KEY,",
				"          date_key = Date_Key,",
				"          order_date = ORDER_DATE,",
				"          order_status = ORDER_STATUS,",
				"          quantity = QUANTITY,",
				"          unit_price = UNIT_PRICE,",
				"          toping_price = TOPING_PRICE,",
				"          promotion_amount = PROMOTION_AMOUNT",
				"     )) ~> sink1"
			]
		}
	}
}