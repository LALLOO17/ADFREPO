{
	"name": "df_Lookup",
	"properties": {
		"folder": {
			"name": "DataFlowMix"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_data_DataFlow_employees_csv",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "ds_data_DataFlow_departments_csv",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_data_DataFlow_ParamFileName",
						"type": "DatasetReference"
					},
					"name": "sink1",
					"rejectedDataLinkedService": {
						"referenceName": "MyNewLinkService",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "lookup1"
				},
				{
					"name": "filter1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          EMPLOYEE_ID as short,",
				"          FIRST_NAME as string,",
				"          LAST_NAME as string,",
				"          EMAIL as string,",
				"          PHONE_NUMBER as string,",
				"          HIRE_DATE as string,",
				"          JOB_ID as string,",
				"          SALARY as double,",
				"          COMMISSION_PCT as double,",
				"          MANAGER_ID as short,",
				"          DEPARTMENT_ID as short",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source(output(",
				"          DEPARTMENT_ID as short,",
				"          DEPARTMENT_NAME as string,",
				"          MANAGER_ID as short,",
				"          LOCATION_ID as short",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source2",
				"source1, source2 lookup(source1@DEPARTMENT_ID == source2@DEPARTMENT_ID,",
				"     multiple: false,",
				"     pickup: 'first',",
				"     asc(LOCATION_ID, true),",
				"     broadcast: 'auto')~> lookup1",
				"source2 filter(DEPARTMENT_ID==90) ~> filter1",
				"lookup1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['LookupMatch.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}